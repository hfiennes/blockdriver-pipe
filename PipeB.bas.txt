   10REM >PipeB
   20*|
   30*| Alternative block driver specification
   40*|
   50*| Pipe (End B)
   60*|
   70*| Version 1.05 17-August-1994 Hugo Fiennes
   80*|
   90DIM code 8192
  100
  110date$=MID$(TIME$,5,11):z$=CHR$0
  120FORI%=0TO8192STEP4:code!I%=0:NEXT
  130
  140V=1<<28
  150C=1<<29
  160Z=1<<30
  170N=1<<31
  180
  190driver_number       = 129
  200
  210flag_morethanone    = &00000001
  220flag_splitrates     = &00000002
  230flag_hardwarefifo   = &00000004
  240flag_controlbreak   = &00000008
  250flag_requirespoll   = &00000010
  260flag_wontempty      = &00000020
  270flag_supportsblock  = &00000040
  280flag_dontovio       = &00000080
  290flag_supportsinq    = &00000100
  300
  310FORpass=0TO2STEP2
  320P%=code
  330[OPT pass
  340.entry
  350      stmfd   r13!,{r14}
  360      and     r1,r1,#&ff
  370      cmp     r0,#((endoftable-table)/4)
  380      addcc   pc,pc,r0,lsl#2
  390      ldmfd   r13!,{pc}^
  400
  410.table
  420      bal     put_byte
  430      bal     get_byte
  440      bal     put_block
  450      bal     get_block
  460      bal     check_tx
  470      bal     check_rx
  480      bal     flush_tx
  490      bal     flush_rx
  500      bal     control_lines
  510      bal     read_modem_control
  520      bal     read_rx_errors
  530      bal     send_break
  540      bal     examine_byte
  550      bal     speed
  560      bal     speed
  570      bal     wordformat
  580      bal     flowcontrol
  590      bal     initialise
  600      bal     closedown
  610.endoftable
  620
  630      FNcheck_and_set(&80)
  640.driverinfo
  650      equs    "Virtual Pipe (end B)"+z$
  660
  670      FNcheck_and_set(&A0)
  680.manufacturerinfo
  690      equs    "The Serial Port"+z$
  700
  710      FNcheck_and_set(&C0)
  720.version
  730      equd    &00010005     ; v1.05
  740.flags
  750      equd    flag_morethanone + flag_wontempty + flag_supportsinq + (16<<24)
  760.drivernumber
  770      equd    driver_number<<8
  780
  790      FNcheck_and_set(&100)
  800.speeds
  810      equd     19200
  820      equd         0
  830
  840      FNcheck_and_set(&180)
  850;--- Put byte routine ---------------------------------------------------
  860.put_byte
  870      mov     r0,r1
  880      and     r1,r2,#&ff
  890      swi     "ARCbbsPipes_InputWrite"
  900      ldmfd   r13!,{pc}^
  910
  920;--- Get byte routine ---------------------------------------------------
  930.get_byte
  940      mov     r0,r1
  950      swi     "ARCbbsPipes_OutputRead"
  960      ldmfd   r13!,{pc}^
  970
  980;--- Put block ----------------------------------------------------------
  990.put_block
 1000      ldmfd   r13!,{pc}^
 1010
 1020;--- Get block ----------------------------------------------------------
 1030.get_block
 1040      ldmfd   r13!,{pc}^
 1050
 1060;--- Check TX buffer ----------------------------------------------------
 1070.check_tx
 1080      mov     r0,r1
 1090      swi     "ARCbbsPipes_InputStatus"
 1100      rsb     r0,r0,#2048
 1110      ldmfd   r13!,{pc}^
 1120
 1130;--- Check RX buffer ----------------------------------------------------
 1140.check_rx
 1150      mov     r0,r1
 1160      swi     "ARCbbsPipes_OutputStatus"
 1170      rsb     r0,r0,#2048
 1180      ldmfd   r13!,{pc}^
 1190
 1200;--- Flush TX buffer ----------------------------------------------------
 1210.flush_tx
 1220      mov     r0,r1
 1230      swi     "ARCbbsPipes_ClearInput"
 1240      ldmfd   r13!,{pc}^
 1250
 1260;--- Flush RX buffer ----------------------------------------------------
 1270.flush_rx
 1280      mov     r0,r1
 1290      swi     "ARCbbsPipes_ClearOutput"
 1300      ldmfd   r13!,{pc}^
 1310
 1320;--- Control lines ------------------------------------------------------
 1330.control_lines
 1340      stmfd   r13!,{r1-r2}
 1350      mov     r0,r1
 1360      swi     "ARCbbsPipes_ReadStatus"
 1370      mov     r3,r0,lsr#4
 1380      bic     r0,r0,#&f0
 1390      ldr     r2,[r13,#4]
 1400      orr     r1,r0,r2,lsl#4
 1410      ldr     r0,[r13]
 1420      swi     "ARCbbsPipes_WriteStatus"
 1430
 1440      mov     r0,r3
 1450      ldmfd   r13!,{r1-r2}
 1460      ldmfd   r13!,{pc}^
 1470
 1480;--- Read modem control lines -------------------------------------------
 1490.read_modem_control
 1500      mov     r0,r1
 1510      swi     "ARCbbsPipes_ReadStatus"
 1520      tst     r0,#1      ; DTR?
 1530      moveq   r0,#%0011  ; (no DCD)
 1540      movne   r0,#%1011  ; DCD set
 1550      ldmfd   r13!,{pc}^
 1560
 1570;--- Read RX errors -----------------------------------------------------
 1580.read_rx_errors
 1590      mov     r0,#0
 1600      ldmfd   r13!,{pc}^
 1610
 1620;--- Send break ---------------------------------------------------------
 1630.send_break
 1640      ldmfd   r13!,{pc}^
 1650
 1660;--- Examine byte -------------------------------------------------------
 1670.examine_byte
 1680      mov     r0,r1
 1690      swi     "ARCbbsPipes_OutputPeek"
 1700      ldmfd   r13!,{pc}^
 1710
 1720;--- Set speed ----------------------------------------------------------
 1730.speed
 1740      mov     r0,#19200
 1750      ldmfd   r13!,{pc}^
 1760
 1770;--- Set word format ----------------------------------------------------
 1780.wordformat
 1790      mov     r0,#0
 1800      ldmfd   r13!,{pc}^
 1810
 1820;--- Set flow control ---------------------------------------------------
 1830.flowcontrol
 1840      ldmfd   r13!,{pc}^
 1850
 1860;--- Initialise driver --------------------------------------------------
 1870.initialise
 1880      stmfd   r13!,{r1-r4}
 1890      adr     r0,command
 1900      swi     "XOS_CLI"
 1910      addvs   r0,r0,#4
 1920      movvc   r0,#0
 1930      ldmfd   r13!,{r1-r4}
 1940      ldmfd   r13!,{pc}^
 1950
 1960.command
 1970      equs    "RMEnsure ARCbbs_Pipes 0.10 RMLoad <SerialDev$Path>Modules.PipeA.PipeModule"+CHR$0
 1980      align
 1990
 2000;--- Close down driver --------------------------------------------------
 2010.closedown
 2020      ldmfd   r13!,{pc}^
 2030]
 2040NEXT
 2050LOADATN"OS_File",10,"SerialDev:Modules.PipeB.Driver",&FFD,,code,P%
 2060LOADATN"OS_File",10,"spec.!serialdev.Modules.PipeB.Driver",&FFD,,code,P%
 2070END
 2080DEFFNcheck_and_set(A%):IF (P%-code)>A% ERROR 1,"Block &"+STR$~A%+" exceeded"::=0ELSEP%=code+A%:=0
